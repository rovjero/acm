package es.acm.entities;
// Generated 06-ene-2018 19:38:01 by Hibernate Tools 5.2.6.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * RelParticipanteTutor generated by hbm2java
 */
@Entity
@Table(name = "rel_participante_tutor", catalog = "acm_schema")
public class RelParticipanteTutor implements java.io.Serializable {

	private RelParticipanteTutorId id;
	private Participante participante;
	private TipoParentesco tipoParentesco;
	private Tutor tutor;

	public RelParticipanteTutor() {
	}

	public RelParticipanteTutor(RelParticipanteTutorId id, Participante participante, TipoParentesco tipoParentesco,
			Tutor tutor) {
		this.id = id;
		this.participante = participante;
		this.tipoParentesco = tipoParentesco;
		this.tutor = tutor;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idParticipante", column = @Column(name = "id_participante", nullable = false)),
			@AttributeOverride(name = "idTutor", column = @Column(name = "id_tutor", nullable = false)) })
	public RelParticipanteTutorId getId() {
		return this.id;
	}

	public void setId(RelParticipanteTutorId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_participante", nullable = false, insertable = false, updatable = false)
	public Participante getParticipante() {
		return this.participante;
	}

	public void setParticipante(Participante participante) {
		this.participante = participante;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_parentesco", nullable = false)
	public TipoParentesco getTipoParentesco() {
		return this.tipoParentesco;
	}

	public void setTipoParentesco(TipoParentesco tipoParentesco) {
		this.tipoParentesco = tipoParentesco;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_tutor", nullable = false, insertable = false, updatable = false)
	public Tutor getTutor() {
		return this.tutor;
	}

	public void setTutor(Tutor tutor) {
		this.tutor = tutor;
	}

}
